package com.jokey.bingo.algo.sort.swap;

class Swap {
	/**
	 * 交换排序
	 *
	 */
	/**
	 * ① 冒泡排序的基本思想
	 * 冒泡排序是一种简单的排序算法。它重复地走访过要排序的数列，一次比较两个元素，如果它们的顺序错误就把它们交换过来。
	 * 走访数列的工作是重复地进行直到没有再需要交换，也就是说该数列已经排序完成。
	 * 这个算法的名字由来是因为每趟比较将当前数列未排序部分的最大的元素“沉”到数列末端，而小的元素会经由交换慢慢“浮”到数列的顶端。
	 *
	 * ② 算法描述
	 * 1）比较相邻的元素。如果前一个比后一个大，就交换它们两个；
	 * 2）对每一对相邻元素作同样的工作，从开始第一对到结尾的最后一对，这样在最后的元素应该会是最大的数；
	 * 3）针对所有的元素重复以上的步骤，除了最后一个；
	 * 4）重复步骤1~3，直到排序完成。为了优化算法，可以设立一个布尔标识，每趟排序开始前设为false，如果该趟排序发生了交换就置为true，
	 * 如果一趟排序结束标识仍为false表示该趟排序没有发生交换，即数组已经有序，可以提前结束排序。
	 */
	/**
	 *算法拓展
	 * 鸡尾酒排序
	 * 鸡尾酒排序，又称定向冒泡排序、搅拌排序等，是对冒泡排序的改进。
	 * 在把最大的数往后面冒泡的同时，把最小的数也往前面冒泡，同时收缩无序区的左右边界，有序区在序列左右逐渐累积。
	 */
	/**
	 * 简单选择排序
	 * ① 基本思想
	 * 简单选择排序(Selection-sort)是一种简单直观的排序算法。
	 * 它的工作原理：首先在未排序序列中找到最小（大）元素，存放到排序序列的起始位置，然后，再从剩余未排序元素中继续寻找最小（大）元素，
	 * 然后放到已排序序列的末尾。以此类推，直到所有元素均排序完毕。
	 *
	 * ② 算法描述
	 * n个记录的简单选择排序可经过(n-1)趟简单选择排序得到有序结果。具体算法描述如下：
	 * 1）初始状态：无序区为R[1..n]，有序区为空；
	 * 2）第i趟排序(i=1,2,3…n-1)开始时，当前有序区和无序区分别为R[1..i-1]和R[i..n]。
	 * 该趟排序从当前无序区中选出关键字最小的记录 R[k]，将它与无序区的第1个记录R交换，
	 * 使R[1..i]和R[i+1..n]分别变为记录个数增加1个的新有序区和记录个数减少1个的新无序区；
	 * 3）(n-1)趟结束，数组有序化了。
	 */
}