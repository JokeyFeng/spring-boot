package com.jokey.bingo.algo.sort.insertion;

class Insertion {
	/**
	 * 插入排序：直接插入排序、希尔排序
	 *
	 * 直接插入排序（Insertion Sort）
	 * ① 基本思想
	 * 直接插入排序（Insertion-Sort）的算法描述是一种简单直观的排序算法。
	 * 它的工作原理是通过构建有序序列，对于未排序数据，在已排序序列中从后向前扫描，找到相应位置并插入。
	 *
	 * ② 算法描述
	 * 一般来说，直接插入排序都采用in-place（原地算法）在数组上实现。具体算法描述如下：
	 * 1）从第一个元素开始，该元素可以认为已经被排序；
	 * 2）取出下一个元素，在已经排序的元素序列中从后向前扫描；
	 * 3）如果该元素（已排序）大于新元素，将该元素移到下一位置；
	 * 4）重复步骤3，直到找到已排序的元素小于或者等于新元素的位置；
	 * 5）将新元素插入到该位置后；
	 * 6）重复步骤2~5。
	 *
	 * 算法拓展
	 * 在直接插入排序中，待插入的元素总是在有序区线性查找合适的插入位置，没有利用有序的优势，考虑使用二分查找搜索插入位置进行优化，即二分插入排序。
	 *
	 * 希尔排序（Shell Sort）
	 * ① 基本思想
	 * 1959年Shell发明，第一个突破O(n2)的排序算法，是直接插入排序的改进版。它与直接插入排序的不同之处在于，它会优先比较距离较远的元素。希尔排序又叫缩小增量排序。
	 *
	 * ② 算法描述
	 * 先将整个待排元素序列分割成 gap 个增量为 gap 的子序列（每个子序列由位置相差为 gap 的元素组成，
	 * 整个序列正好分割成 gap 个子序列，每个序列中有 n / gap 个元素）分别进行直接插入排序，
	 * 然后缩减增量为之前的一半再进行排序，待 gap == 1时，希尔排序就变成了直接插入排序。
	 * 因为此时序列已经基本有序，直接插入排序在元素基本有序的情况下（接近最好情况），效率是很高的。gap初始值一般取 len / 2。
	 *
	 *
	 */
}